var BANNER,SWITCHES,exec,fs,helpers,kckr,optionParser,optparse,opts,parseOptions,path,print_line,print_warn,run,sources,spawn,timeLog,usage,version,_ref;fs=require("fs"),path=require("path"),helpers=require("./helpers"),optparse=require("./optparse"),kckr=require("./kckr"),_ref=require("child_process"),spawn=_ref.spawn,exec=_ref.exec,print_line=function(line){return process.stdout.write(line+"\n")},print_warn=function(line){return process.stderr.write(line+"\n")},BANNER="Usage: kckr [options] path/to/watch\n",SWITCHES=[["-e","--execute [CMD]","cmd to execute upon file change. use {}, {source}, {basename}, {basename_noext}, {dirname} for path placeholder(s)."],["-k","--kickonce","just traverse the dir, exec on each match, and quit. don't do any watching."],["-r","--pattern [PATTERN]","pattern for filenames to match if watching a dir."],["-h","--help","display this help message"],["-v","--version","display the version number"]],opts={},sources=[],optionParser=null,run=function(){var action,exit,k,kckrCallback,literals,re;exit=function(){return print_line("\nkckr sleep. (-.- ) Zz"),process.exit(0)};try{process.on("SIGINT",exit)}catch(err){process.on("exit",exit)}parseOptions();if(opts.help)return usage();if(opts.version)return version();if(!opts.execute)return;return literals=opts.run?sources.splice(1):[],kckrCallback=function(source,base){var basename,basename_noext,cmd,dirname,nobase,nobase_noext;return basename=path.basename(source),basename_noext=basename.replace(path.extname(basename),""),dirname=path.dirname(source),nobase=source.replace(base,"").replace(/^\/+/,""),nobase_noext=nobase.replace(path.extname(basename),""),cmd=opts.execute.replace("{source}",source),cmd=cmd.replace("{basename}",basename),cmd=cmd.replace("{basename_noext}",basename_noext),cmd=cmd.replace("{dirname}",dirname),cmd=cmd.replace("{nobase}",nobase),cmd=cmd.replace("{nobase_noext}",nobase_noext),cmd=cmd.replace("{}",source),timeLog("<- `"+cmd+"`"),exec(cmd,function(err,stdo,stde){var l,line,_i,_j,_len,_len2,_ref2,_ref3,_results;err&&timeLog("!!! Error"),_ref2=function(){var _j,_len,_ref2,_results;_ref2=stdo.split("\n"),_results=[];for(_j=0,_len=_ref2.length;_j<_len;_j++)l=_ref2[_j],l!==""&&_results.push(l);return _results}();for(_i=0,_len=_ref2.length;_i<_len;_i++)line=_ref2[_i],timeLog("-> "+line);_ref3=function(){var _k,_len2,_ref3,_results2;_ref3=stde.split("\n"),_results2=[];for(_k=0,_len2=_ref3.length;_k<_len2;_k++)l=_ref3[_k],l!==""&&_results2.push(l);return _results2}(),_results=[];for(_j=0,_len2=_ref3.length;_j<_len2;_j++)line=_ref3[_j],_results.push(timeLog("-> "+line));return _results})},re=opts.pattern?new RegExp(opts.pattern):/.*/,k=new kckr.Kckr({pattern:re,sources:sources,callback:kckrCallback,kickonce:opts.kickonce}),action=opts.kickonce?"kicking ( O_O)":"watching (O_O )",timeLog("kckr is "+action)},parseOptions=function(){var o;optionParser=new optparse.OptionParser(SWITCHES,BANNER),o=opts=optionParser.parse(process.argv.slice(2)),sources=o.arguments},usage=function(){return print_line((new optparse.OptionParser(SWITCHES,BANNER)).help())},version=function(){return exec("npm view kckr version | cut -d . -f 1,2,3 -s",function(err,stdo,stde){err!=null&&print_line("Unknown version.");if(err!=null)return;return print_line("Kckr version "+stdo)})},timeLog=function(message){return print_line(""+(new Date).toLocaleTimeString()+" - "+message)},exports.run=run;